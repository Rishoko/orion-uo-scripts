const itemList = 'loot'; // OA list of items to loot
const maxRadius = 2; // maximum looting radius
var itemCount = 0;

scavenge();
loot();

if (!itemCount == 1)
    Orion.Print('[Info] autoLoot: Acquired ' + itemCount + ' items.');
else
    Orion.Print('[Info] autoLoot: Acquired ' + itemCount + ' item.');

function scavenge() {
    var queue = Orion.FindList(itemList, ground, '', maxRadius)
    if (!queue.length) return;

    moveToBackpack(queue);
}

function loot() {
    const corpseIgnore = 'corpses'; // OA list of corpses to ignore
    const corpseList = 'corpses'; // OA list of corpses to search

    Orion.UseIgnoreList(corpseIgnore);
    var corpses = Orion.FindList(corpseList, ground, '', maxRadius);
    if (!corpses.length) return;

    for (var i = 0; i < corpses.length; i++) {
        const corpse = corpses[i];

        if (!criminalCheck(corpse)) {
            var queue = Orion.FindList(itemList, corpse);
            moveToBackpack(queue);
            Orion.AddIgnoreListObject(corpseIgnore, corpse);
        } else {
            Orion.AddIgnoreListObject(corpseIgnore, corpse);
        }
    }
}

function moveToBackpack(queue) {
    for (var i = 0; i < queue.length; i++) {
        const item = queue[i];

        Orion.MoveItem(item);
        Orion.Wait(Orion.Random(1000, 1250));
        itemCount++;
    }
}

function criminalCheck(corpse) {
    Orion.ClearJournal();
    Orion.OpenContainer(corpse);
    Orion.Wait(Orion.Random(500, 750));
    if (Orion.InJournal('Looting this corpse will be a criminal act!|You have disabled opening innocent corpses')) {
        return true;
    } else {
        return false;
    }
}