var lootList = 'loot'; // OA list of items to loot
var lootRadius = 2; // maximum looting radius

function autoLoot() {
    scavenge();
    loot();
}

function scavenge() {
    var queue = Orion.FindList(lootList, ground, '', lootRadius)
    if (!queue.length) return;

    moveToBackpack(queue);
}

function loot() {
    var corpseIgnore = 'corpses'; // OA list of corpses to ignore
    var corpseList = 'corpses'; // OA list of corpses to search

    Orion.UseIgnoreList(corpseList);
    var corpses = Orion.FindList(corpseList, ground, '', lootRadius);
    for (var i = 0; i < corpses.length; i++) {
        const corpse = corpses[i];

        if (!criminalCheck(corpse)) {
            var queue = Orion.FindList(lootList, corpse);
            moveToBackpack(queue);
            Orion.AddIgnoreListObject(corpseIgnore, corpse);
        } else {
            Orion.AddIgnoreListObject(corpseIgnore, corpse);
        }
    }
}

function moveToBackpack(queue) {
    for (var i = 0; i < queue.length; i++) {
        const item = queue[i];

        Orion.MoveItem(item);
        Orion.Wait(Orion.Random(800, 1200));
    }
}

function criminalCheck(corpse) {
    Orion.ClearJournal();
    Orion.OpenContainer(corpse);
    Orion.Wait(500);
    if (Orion.InJournal('Looting this corpse will be a criminal act!')) {
        return true;
    } else {
        return false;
    }
}