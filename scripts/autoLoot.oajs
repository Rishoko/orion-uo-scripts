'use strict';
const delay = 500; // server-imposed delay between actions
const itemList = 'loot'; // OA list of items to loot
const maxRadius = 2; // maximum looting radius
const ping = 100; // round-trip latency between client and server
var itemCount = 0;

scavenge();
loot();

if (itemCount > 1)
    Orion.Print('[Info] autoLoot: Acquired ' + itemCount + ' items.');
else if (itemCount == 1)
    Orion.Print('[Info] autoLoot: Acquired ' + itemCount + ' item.');

function scavenge() {
    var queue = Orion.FindList(itemList, ground, '', maxRadius)

    if (queue.length <= 0) return;
    moveToBackpack(queue);
}

function loot() {
    var corpseIgnore = 'corpses'; // OA list of corpses to ignore
    var corpseList = 'corpses'; // OA list of corpses to search

    Orion.UseIgnoreList(corpseIgnore);
    var corpses = Orion.FindList(corpseList, ground, '', maxRadius);

    if (corpses.length <= 0) return;
    for (var i = 0; i < corpses.length; i++) {
        const corpse = corpses[i];

        if (!criminalCheck(corpse)) {
            var queue = Orion.FindList(itemList, corpse);
            moveToBackpack(queue);
            Orion.AddIgnoreListObject(corpseIgnore, corpse);
        } else {
            Orion.AddIgnoreListObject(corpseIgnore, corpse);
        }
        if (i < corpse.length - 1)
            Orion.Wait(delay + ping);
    }
}

function moveToBackpack(queue) {
    for (var i = 0; i < queue.length; i++) {
        const item = queue[i];

        Orion.MoveItem(item);
        if (i < queue.length - 1)
            Orion.Wait(delay + ping);
        itemCount++;
    }
}

function criminalCheck(corpse) {
    Orion.ClearJournal();
    Orion.OpenContainer(corpse);
    Orion.Wait(delay + ping);
    if (Orion.InJournal('Looting this corpse will be a criminal act!|You have disabled opening innocent corpses')) {
        return true;
    } else {
        return false;
    }
}